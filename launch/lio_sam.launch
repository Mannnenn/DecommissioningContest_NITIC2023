<launch>

  <include file="$(find livox_ros_driver2)/launch_ROS1/msg_MID360_multi.launch" />
  <node name="merge_livox_msg" pkg="cable_reel" type="merge_livox_msg" output="screen" />

  <node name="imu_transformer" pkg="imu_transformer" type="imu_transformer_node" output="screen">
    <remap from="imu_in/data" to="/livox/imu_192_168_1_139" />
    <remap from="imu_out/data" to="/livox/imu" />
    <param name="target_frame" value="base_link" />
  </node>

  <arg name="model" default="$(find cable_reel)/urdf/robot_model.urdf" />
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <node name="robot_state_publisher_urdf" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="true">
</node>


  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_livox"
    args="0 0 0  0.175 0 -1.57 base_link livox_frame" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="imu_link"
    args="0 0 0  0 3.14 0 base_link imu_base" />


  <include file="$(find lio_sam)/launch/run_single.launch" />

  <node name="pointcloud_to_laserscan" pkg="pointcloud_to_laserscan"
    type="pointcloud_to_laserscan_node" output="screen">
    <remap from="cloud_in" to="/lio_sam/mapping/cloud_registered" />
    <rosparam command="load" file="$(find cable_reel)/config/point_livox.yaml" />
  </node>


  <node pkg="tf" type="static_transform_publisher" name="map_to_odom"
    args="0 0 0 0 0 0 map odom 100" />


  <!-- gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" clear_params="true">
    <rosparam command="load" file="$(find cable_reel)/config/gmapping.yaml" />
    <remap from="scan" to="scan" />
    <param name="base_frame" value="base_link" />
    <param name="odom_frame" value="camera_init" />
    <param name="map_frame" value="map" />
  </node>

</launch>